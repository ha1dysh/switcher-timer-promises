{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAMtB,SAAkBC,G,kBAQQ,IAAIC,SAAQ,SAACC,EAASC,GAC1C,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAiCM,OAARC,EAAE,QAAYD,OAANE,EAAM,OAE/CP,EAAK,sBAAqCK,OAjBrC,KAiB+B,QAAYA,OAANE,EAAM,SACjDA,MAESC,MAAK,SAACC,G,OAAQC,QAAQC,IAAIF,MAAMG,OAAM,SAACC,G,OAAUH,QAAQC,IAAIE,MAC3EN,GAAOO,GAlBTjB,EAAEkB,iBAEFD,EAAOE,OAAOvB,EAAK,GAAGwB,OACtBV,EAAQS,OAAOvB,EAAK,GAAGwB,OACvBC,OAASF,OAAOvB,EAAK,GAAGwB,OAExB,IAAK,IAAIE,EAAI,EAAGA,EAAID,OAAQC,IAAGC,EAAAD,MAXjC,IAAIL,EAAO,KACPP,EAAQ,K","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nlet step = null;\nlet delay = null;\nlet position = null;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  step = Number(form[0].value);\n  delay = Number(form[1].value);\n  amount = Number(form[2].value);\n\n  for (let i = 0; i < amount; i++) {\n    const createPromise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${i} in ${delay}ms`);\n        }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n    });\n    createPromise.then((res) => console.log(res)).catch((error) => console.log(error))\n    delay+=step\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","i","$ce04d3a99e08e73b$var$delay","then","res","console","log","catch","error","$ce04d3a99e08e73b$var$step","preventDefault","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.e0f43255.js.map"}