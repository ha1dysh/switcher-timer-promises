{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAOtB,SAAkBC,GAChBA,EAAEC,iBAEFC,EAAQC,OAAOP,EAAK,GAAGQ,OACvBC,EAAOF,OAAOP,EAAK,GAAGQ,OACtBE,OAASH,OAAOP,EAAK,GAAGQ,OAExBG,YAAW,IAAMC,KAAiBN,GAClCN,EAAKa,WAbP,IAAIJ,EAAO,KACPH,EAAQ,KAERQ,EAAK,EAaT,SAASF,IACW,IAAIG,SAAQ,CAACC,EAASC,KAChBC,KAAKC,SAAW,IAGpCH,EAAQ,uBAAqBF,QAAWR,OAExCW,EAAK,sBAAoBH,QAASR,UAInCc,MAAKC,IACJC,QAAQC,IAAIF,MAEbD,MAOHd,GAASG,EACTK,GAAM,OACFA,GAAMJ,QACRC,YAAW,IAAMC,KAAiBN,MATjCkB,OAAMC,IACLH,QAAQC,IAAIE","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nlet step = null;\nlet delay = null;\nlet position = null;\nlet ct = 1;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  delay = Number(form[0].value);\n  step = Number(form[1].value);\n  amount = Number(form[2].value);\n\n  setTimeout(() => createPromise(), delay);\n  form.reset();\n}\n\nfunction createPromise() {\n  const myPromise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${ct} in ${delay}ms`);\n    }\n    reject(`❌ Rejected promise ${ct} in ${delay}ms`);\n  });\n\n  myPromise\n    .then(res => {\n      console.log(res);\n    })\n    .then(callAgain())\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfunction callAgain() {\n  delay += step;\n  ct += 1;\n  if (ct <= amount) {\n    setTimeout(() => createPromise(), delay);\n  }\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$step","amount","setTimeout","$47d4ff9957288465$var$createPromise","reset","$47d4ff9957288465$var$ct","Promise","resolve","reject","Math","random","then","res","console","log","catch","error"],"version":3,"file":"03-promises.7a282b6a.js.map"}