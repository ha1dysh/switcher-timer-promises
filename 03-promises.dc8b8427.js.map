{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAMtB,SAAkBC,GAChBA,EAAEC,iBAEFC,EAAOC,OAAOP,EAAK,GAAGQ,OACtBC,EAAQF,OAAOP,EAAK,GAAGQ,OACvBE,OAASH,OAAOP,EAAK,GAAGQ,OAExB,IAAK,IAAIG,EAAI,EAAGA,EAAID,OAAQC,IAAK,CACT,IAAIC,SAAQ,CAACC,EAASC,KAC1C,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBF,QAAUF,OAEvCK,EAAK,8BAAmCL,SACzCA,MAESU,MAAMC,GAAQC,QAAQC,IAAIF,KAAMG,OAAOC,GAAUH,QAAQC,IAAIE,KAC3Ef,GAAOH,MAvBX,IAAIA,EAAO,KACPG,EAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nlet step = null;\nlet delay = null;\nlet position = null;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  step = Number(form[0].value);\n  delay = Number(form[1].value);\n  amount = Number(form[2].value);\n\n  for (let i = 0; i < amount; i++) {\n    const createPromise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${i} in ${delay}ms`);\n        }\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n    });\n    createPromise.then((res) => console.log(res)).catch((error) => console.log(error))\n    delay+=step\n  }\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","$47d4ff9957288465$var$step","Number","value","$47d4ff9957288465$var$delay","amount","i","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","res","console","log","catch","error"],"version":3,"file":"03-promises.dc8b8427.js.map"}